version: "3.8"

services:
  # ----------------
  # MinIO for Mimir storage
  # ----------------
  minio:
    image: minio/minio
    entrypoint: [""]
    command: ["sh", "-c", "mkdir -p /data/mimir && minio server --quiet /data"]
    environment:
      MINIO_ROOT_USER: mimir
      MINIO_ROOT_PASSWORD: supersecret
    volumes:
      - minio-data:/data
    networks:
      - monitoring

  # ----------------
  # Flask App with OTEL / Prometheus metrics
  # ----------------
  flask-app:
    build: ./flask-app-otel
    environment:
      OTEL_EXPORTER_OTLP_ENDPOINT: "http://alloy:4317"
      OTEL_METRICS_EXPORTER: "otlp"
      OTEL_RESOURCE_ATTRIBUTES: "service.name=flask-app"
    ports:
      - "5000:5000"
    networks:
      - monitoring

  # ----------------
  # Grafana Alloy (replaces OTEL Collector)
  # ----------------
  alloy:
    image: grafana/alloy:latest
    command: ["--config.file=/etc/alloy.yaml"]
    volumes:
      - ./config/alloy.yaml:/etc/alloy.yaml
    ports:
      - "4317:4317"   # OTLP gRPC from Flask
      - "4318:4318"   # OTLP HTTP from Flask (optional)
      - "8889:8889"   # Prometheus scrape endpoint
    networks:
      - monitoring

  # ----------------
  # Grafana
  # ----------------
  grafana:
    image: grafana/grafana:latest
    environment:
      GF_AUTH_ANONYMOUS_ENABLED: "true"
      GF_AUTH_ANONYMOUS_ORG_ROLE: "Admin"
    volumes:
      - ./config/grafana-provisioning-dashboards.yaml:/etc/grafana/provisioning/dashboards/provisioning-dashboards.yaml:ro
      - ./config/grafana-provisioning-datasources.yaml:/etc/grafana/provisioning/datasources/provisioning-datasources.yaml:ro
      - ./operations/flask-app-otel.json:/var/lib/grafana/dashboards/flask-app-otel.json:ro
    ports:
      - "9000:3000"
    depends_on:
      - alloy
    networks:
      - monitoring

  # ----------------
  # Load Balancer for Mimir Remote Write
  # ----------------
  load-balancer:
    image: nginx:latest
    volumes:
      - ./config/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "9009:9009"
    depends_on:
      - mimir-1
      - mimir-2
      - mimir-3
    networks:
      - monitoring

  # ----------------
  # Mimir 3-node cluster
  # ----------------
  mimir-1:
    image: grafana/mimir:latest
    command: ["-config.file=/etc/mimir.yaml"]
    hostname: mimir-1
    depends_on:
      - minio
    volumes:
      - ./config/mimir.yaml:/etc/mimir.yaml
      - ./config/alertmanager-fallback-config.yaml:/etc/alertmanager-fallback-config.yaml
      - mimir-1-data:/data
    networks:
      - monitoring

  mimir-2:
    image: grafana/mimir:latest
    command: ["-config.file=/etc/mimir.yaml"]
    hostname: mimir-2
    depends_on:
      - minio
    volumes:
      - ./config/mimir.yaml:/etc/mimir.yaml
      - ./config/alertmanager-fallback-config.yaml:/etc/alertmanager-fallback-config.yaml
      - mimir-2-data:/data
    networks:
      - monitoring

  mimir-3:
    image: grafana/mimir:latest
    command: ["-config.file=/etc/mimir.yaml"]
    hostname: mimir-3
    depends_on:
      - minio
    volumes:
      - ./config/mimir.yaml:/etc/mimir.yaml
      - ./config/alertmanager-fallback-config.yaml:/etc/alertmanager-fallback-config.yaml
      - mimir-3-data:/data
    networks:
      - monitoring

volumes:
  minio-data:
  mimir-1-data:
  mimir-2-data:
  mimir-3-data:

networks:
  monitoring:
    driver: bridge
