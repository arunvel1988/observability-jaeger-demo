/*
 * Grafana Alloy configuration
 * Collect Flask metrics via OTLP and push to Mimir
 */

// ---------- Receive OTLP Metrics from Flask ----------
otelcol.receiver.otlp "flask" {
  grpc {
    endpoint = "0.0.0.0:4317"
  }
  http {
    endpoint = "0.0.0.0:4318"
  }

  output {
    metrics = [otelcol.processor.batch.default.input]
  }
}

// ---------- Batch Processor ----------
otelcol.processor.batch "default" {
  timeout          = "5s"
  send_batch_size  = 100
  output {
    metrics = [otelcol.exporter.prometheusremotewrite.mimir.input]
  }
}

// ---------- Export to Mimir via Remote Write ----------
otelcol.exporter.prometheusremotewrite "mimir" {
  endpoint = "http://load-balancer:9009/api/v1/push"
  headers = {
    "X-Scope-OrgID" = "demo"
  }
}

// ---------- (Optional) Exporter for Local Debug ----------
otelcol.exporter.prometheus "local" {
  endpoint = "0.0.0.0:8889"
  enable_open_metrics = true
}

// ---------- Split Metrics to Mimir + Local ----------
otelcol.processor.attributes "fanout" {
  actions = []
  output {
    metrics = [
      otelcol.exporter.prometheusremotewrite.mimir.input,
      otelcol.exporter.prometheus.local.input,
    ]
  }
}

// ---------- Live Debugging ----------
livedebugging {
  enabled = true
}
