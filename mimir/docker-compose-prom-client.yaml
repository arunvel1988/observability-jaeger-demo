version: "3.8"
services:
  minio:
    image: minio/minio
    entrypoint: [""]
    command: ["sh", "-c", "mkdir -p /data/mimir && minio server --quiet /data"]
    environment:
      MINIO_ROOT_USER: mimir
      MINIO_ROOT_PASSWORD: supersecret
    volumes:
      - minio-data:/data
    networks:
      - monitoring

  flask-app:
    build: ./flask-app

    ports:
      - "5000:5000"
    networks:
      - monitoring

  prometheus:
    image: prom/prometheus:latest
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --log.level=error
      - --storage.tsdb.path=/prometheus
      - --web.console.libraries=/usr/share/prometheus/console_libraries
      - --web.console.templates=/usr/share/prometheus/consoles
    volumes:
      - ./config/prometheus.yaml:/etc/prometheus/prometheus.yml
      - ./operations/rules.yaml:/etc/prometheus/rules.yaml
    depends_on:
      - flask-app
      - mimir-1
      - mimir-2
      - mimir-3
    networks:
      - monitoring

  grafana:
    image: grafana/grafana:latest
    environment:
      GF_AUTH_ANONYMOUS_ENABLED: "true"
      GF_AUTH_ANONYMOUS_ORG_ROLE: "Admin"
      GF_USERS_DEFAULT_THEME: light
    volumes:
      - ./config/grafana-provisioning-dashboards.yaml:/etc/grafana/provisioning/dashboards/provisioning-dashboards.yaml:ro
      - ./config/grafana-provisioning-datasources.yaml:/etc/grafana/provisioning/datasources/provisioning-datasources.yaml:ro
      - ./operations/flask-app-metrics.json:/var/lib/grafana/dashboards/flask-app-metrics.json:ro
      - ./operations/mimir-alertmanager.json:/var/lib/grafana/dashboards/mimir-alertmanager.json:ro
      - ./operations/mimir-compactor.json:/var/lib/grafana/dashboards/mimir-compactor.json:ro
      - ./operations/mimir-object-store.json:/var/lib/grafana/dashboards/mimir-object-store.json:ro
      - ./operations/mimir-overrides.json:/var/lib/grafana/dashboards/mimir-overrides.json:ro
      - ./operations/mimir-queries.json:/var/lib/grafana/dashboards/mimir-queries.json:ro
      - ./operations/mimir-reads.json:/var/lib/grafana/dashboards/mimir-reads.json:ro
      - ./operations/mimir-ruler.json:/var/lib/grafana/dashboards/mimir-ruler.json:ro
      - ./operations/mimir-tenants.json:/var/lib/grafana/dashboards/mimir-tenants.json:ro
      - ./operations/mimir-top-tenants.json:/var/lib/grafana/dashboards/mimir-top-tenants.json:ro
      - ./operations/mimir-writes.json:/var/lib/grafana/dashboards/mimir-writes.json:ro

    ports:
      - 9000:3000
    depends_on:
      - prometheus
    networks:
      - monitoring

  mimir-1:
    image: grafana/mimir:latest
    command: ["-config.file=/etc/mimir.yaml"]
    hostname: mimir-1
    depends_on:
      - minio
    volumes:
      - ./config/mimir.yaml:/etc/mimir.yaml
      - ./config/alertmanager-fallback-config.yaml:/etc/alertmanager-fallback-config.yaml
      - mimir-1-data:/data
    networks:
      - monitoring

  mimir-2:
    image: grafana/mimir:latest
    command: ["-config.file=/etc/mimir.yaml"]
    hostname: mimir-2
    depends_on:
      - minio
    volumes:
      - ./config/mimir.yaml:/etc/mimir.yaml
      - ./config/alertmanager-fallback-config.yaml:/etc/alertmanager-fallback-config.yaml
      - mimir-2-data:/data
    networks:
      - monitoring

  mimir-3:
    image: grafana/mimir:latest
    command: ["-config.file=/etc/mimir.yaml"]
    hostname: mimir-3
    depends_on:
      - minio
    volumes:
      - ./config/mimir.yaml:/etc/mimir.yaml
      - ./config/alertmanager-fallback-config.yaml:/etc/alertmanager-fallback-config.yaml
      - mimir-3-data:/data
    networks:
      - monitoring

volumes:
  mimir-1-data:
  mimir-2-data:
  mimir-3-data:
  minio-data:

networks:
  monitoring:
    driver: bridge
