mkdir -p ./loki-data/{chunks,index,wal,cache,compactor}
sudo chown -R 10001:10001 ./loki-data
sudo chmod -R 775 ./loki-data


docker-compose -f docker-compose-otel.yml up
docker-compose -f docker-compose-otel.yml down --remove-orphans
######################################################################################################################
localhost:3200 = tempo
localhost:3000 = grafana

localhost:5001 = service1
localhost:5002 = service2

###################################################################################################################


{ resource.service.name = "service1" && name =~ "GET /|call-service2" }

{ resource.service.name = "service1" }


{ resource.service.name = "service2" }


{ name = "call-service2" }


{ name =~ "GET.*" }


{ name =~ "GET /|call-service2" }

{ resource.service.name = "service1" && name = "call-service2" }

{ resource.service.name = "service2" && name =~ "GET.*" }


{ duration > 200ms }


{ resource.service.name = "service1" && duration < 500ms }



############################################################################################################################################
# Install requirements
sudo apt install python3.12-venv -y
python3 -m venv venv
source venv/bin/activate

pip install flask requests opentelemetry-distro opentelemetry-exporter-otlp

# Initialize OpenTelemetry
opentelemetry-bootstrap -a install

# Run app with auto instrumentation
opentelemetry-instrument \
  --service_name checkout-service \
  --traces_exporter console \
  flask --app app run --host 0.0.0.0 --port 5000
#######################################################################################################################

opentelemetry-instrument \
  --service_name checkout-service \
  --traces_exporter otlp \
  --metrics_exporter otlp \
  flask --app app run --host 0.0.0.0 --port 5000

###############################################################################################################################


app.py
from flask import Flask, jsonify
import requests

app = Flask(__name__)

@app.route("/checkout", methods=["POST"])
def checkout():
    # This external call will also be auto-instrumented
    response = requests.post("https://httpbin.org/status/200")

    return jsonify({
        "status": "success" if response.status_code == 200 else "failed",
        "payment_status": response.status_code
    })

if __name__ == "__main__":
    app.run(port=5000, debug=True)



############################################################################################################################################
